// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InputUserInfo.proto

package com.protobf;

public final class InputUser {
  private InputUser() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface IPOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string latestIp = 1;
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    boolean hasLatestIp();
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    String getLatestIp();
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    com.google.protobuf.ByteString
        getLatestIpBytes();

    // repeated string allIp = 2;
    /**
     * <code>repeated string allIp = 2;</code>
     */
    java.util.List<String>
    getAllIpList();
    /**
     * <code>repeated string allIp = 2;</code>
     */
    int getAllIpCount();
    /**
     * <code>repeated string allIp = 2;</code>
     */
    String getAllIp(int index);
    /**
     * <code>repeated string allIp = 2;</code>
     */
    com.google.protobuf.ByteString
        getAllIpBytes(int index);
  }
  /**
   * Protobuf type {@code IP}
   *
   * <pre>
   *IP信息
   * </pre>
   */
  public static final class IP extends
      com.google.protobuf.GeneratedMessageLite
      implements IPOrBuilder {
    // Use IP.newBuilder() to construct.
    private IP(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private IP(boolean noInit) {}

    private static final IP defaultInstance;
    public static IP getDefaultInstance() {
      return defaultInstance;
    }

    public IP getDefaultInstanceForType() {
      return defaultInstance;
    }

    private IP(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              latestIp_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allIp_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              allIp_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          allIp_ = new com.google.protobuf.UnmodifiableLazyStringList(allIp_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<IP> PARSER =
        new com.google.protobuf.AbstractParser<IP>() {
      public IP parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IP(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<IP> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string latestIp = 1;
    public static final int LATESTIP_FIELD_NUMBER = 1;
    private Object latestIp_;
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    public boolean hasLatestIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    public String getLatestIp() {
      Object ref = latestIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          latestIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string latestIp = 1;</code>
     *
     * <pre>
     *存最新的
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLatestIpBytes() {
      Object ref = latestIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        latestIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string allIp = 2;
    public static final int ALLIP_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList allIp_;
    /**
     * <code>repeated string allIp = 2;</code>
     */
    public java.util.List<String>
        getAllIpList() {
      return allIp_;
    }
    /**
     * <code>repeated string allIp = 2;</code>
     */
    public int getAllIpCount() {
      return allIp_.size();
    }
    /**
     * <code>repeated string allIp = 2;</code>
     */
    public String getAllIp(int index) {
      return allIp_.get(index);
    }
    /**
     * <code>repeated string allIp = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAllIpBytes(int index) {
      return allIp_.getByteString(index);
    }

    private void initFields() {
      latestIp_ = "";
      allIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLatestIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLatestIpBytes());
      }
      for (int i = 0; i < allIp_.size(); i++) {
        output.writeBytes(2, allIp_.getByteString(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLatestIpBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allIp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(allIp_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAllIpList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static IP parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IP parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IP parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IP parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IP parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IP parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static IP parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static IP parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static IP parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static IP parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(IP prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code IP}
     *
     * <pre>
     *IP信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          IP, Builder>
        implements IPOrBuilder {
      // Construct using com.protobf.InputUser.IP.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        latestIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        allIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public IP getDefaultInstanceForType() {
        return IP.getDefaultInstance();
      }

      public IP build() {
        IP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IP buildPartial() {
        IP result = new IP(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.latestIp_ = latestIp_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          allIp_ = new com.google.protobuf.UnmodifiableLazyStringList(
              allIp_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.allIp_ = allIp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(IP other) {
        if (other == IP.getDefaultInstance()) return this;
        if (other.hasLatestIp()) {
          bitField0_ |= 0x00000001;
          latestIp_ = other.latestIp_;
          
        }
        if (!other.allIp_.isEmpty()) {
          if (allIp_.isEmpty()) {
            allIp_ = other.allIp_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAllIpIsMutable();
            allIp_.addAll(other.allIp_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLatestIp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IP parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IP) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string latestIp = 1;
      private Object latestIp_ = "";
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public boolean hasLatestIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public String getLatestIp() {
        Object ref = latestIp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          latestIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLatestIpBytes() {
        Object ref = latestIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          latestIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public Builder setLatestIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        latestIp_ = value;
        
        return this;
      }
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public Builder clearLatestIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latestIp_ = getDefaultInstance().getLatestIp();
        
        return this;
      }
      /**
       * <code>required string latestIp = 1;</code>
       *
       * <pre>
       *存最新的
       * </pre>
       */
      public Builder setLatestIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        latestIp_ = value;
        
        return this;
      }

      // repeated string allIp = 2;
      private com.google.protobuf.LazyStringList allIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAllIpIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allIp_ = new com.google.protobuf.LazyStringArrayList(allIp_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public java.util.List<String>
          getAllIpList() {
        return java.util.Collections.unmodifiableList(allIp_);
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public int getAllIpCount() {
        return allIp_.size();
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public String getAllIp(int index) {
        return allIp_.get(index);
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAllIpBytes(int index) {
        return allIp_.getByteString(index);
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public Builder setAllIp(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllIpIsMutable();
        allIp_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public Builder addAllIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllIpIsMutable();
        allIp_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public Builder addAllAllIp(
          Iterable<String> values) {
        ensureAllIpIsMutable();
        super.addAll(values, allIp_);
        
        return this;
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public Builder clearAllIp() {
        allIp_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      /**
       * <code>repeated string allIp = 2;</code>
       */
      public Builder addAllIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllIpIsMutable();
        allIp_.add(value);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IP)
    }

    static {
      defaultInstance = new IP(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IP)
  }

  public interface ContactOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .Caller callers = 1;
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    java.util.List<Caller>
        getCallersList();
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    Caller getCallers(int index);
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    int getCallersCount();

    // repeated .Except excepts = 2;
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    java.util.List<Except>
        getExceptsList();
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    Except getExcepts(int index);
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    int getExceptsCount();
  }
  /**
   * Protobuf type {@code Contact}
   *
   * <pre>
   *联系人信息
   * </pre>
   */
  public static final class Contact extends
      com.google.protobuf.GeneratedMessageLite
      implements ContactOrBuilder {
    // Use Contact.newBuilder() to construct.
    private Contact(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Contact(boolean noInit) {}

    private static final Contact defaultInstance;
    public static Contact getDefaultInstance() {
      return defaultInstance;
    }

    public Contact getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Contact(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                callers_ = new java.util.ArrayList<Caller>();
                mutable_bitField0_ |= 0x00000001;
              }
              callers_.add(input.readMessage(Caller.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                excepts_ = new java.util.ArrayList<Except>();
                mutable_bitField0_ |= 0x00000002;
              }
              excepts_.add(input.readMessage(Except.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          callers_ = java.util.Collections.unmodifiableList(callers_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          excepts_ = java.util.Collections.unmodifiableList(excepts_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Contact> PARSER =
        new com.google.protobuf.AbstractParser<Contact>() {
      public Contact parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Contact(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Contact> getParserForType() {
      return PARSER;
    }

    // repeated .Caller callers = 1;
    public static final int CALLERS_FIELD_NUMBER = 1;
    private java.util.List<Caller> callers_;
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    public java.util.List<Caller> getCallersList() {
      return callers_;
    }
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    public java.util.List<? extends CallerOrBuilder>
        getCallersOrBuilderList() {
      return callers_;
    }
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    public int getCallersCount() {
      return callers_.size();
    }
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    public Caller getCallers(int index) {
      return callers_.get(index);
    }
    /**
     * <code>repeated .Caller callers = 1;</code>
     */
    public CallerOrBuilder getCallersOrBuilder(
        int index) {
      return callers_.get(index);
    }

    // repeated .Except excepts = 2;
    public static final int EXCEPTS_FIELD_NUMBER = 2;
    private java.util.List<Except> excepts_;
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    public java.util.List<Except> getExceptsList() {
      return excepts_;
    }
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    public java.util.List<? extends ExceptOrBuilder>
        getExceptsOrBuilderList() {
      return excepts_;
    }
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    public int getExceptsCount() {
      return excepts_.size();
    }
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    public Except getExcepts(int index) {
      return excepts_.get(index);
    }
    /**
     * <code>repeated .Except excepts = 2;</code>
     */
    public ExceptOrBuilder getExceptsOrBuilder(
        int index) {
      return excepts_.get(index);
    }

    private void initFields() {
      callers_ = java.util.Collections.emptyList();
      excepts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCallersCount(); i++) {
        if (!getCallers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExceptsCount(); i++) {
        if (!getExcepts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < callers_.size(); i++) {
        output.writeMessage(1, callers_.get(i));
      }
      for (int i = 0; i < excepts_.size(); i++) {
        output.writeMessage(2, excepts_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < callers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, callers_.get(i));
      }
      for (int i = 0; i < excepts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, excepts_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Contact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Contact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Contact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Contact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Contact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Contact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Contact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Contact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Contact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Contact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Contact prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Contact}
     *
     * <pre>
     *联系人信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Contact, Builder>
        implements ContactOrBuilder {
      // Construct using com.protobf.InputUser.Contact.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        callers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        excepts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public Contact getDefaultInstanceForType() {
        return Contact.getDefaultInstance();
      }

      public Contact build() {
        Contact result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Contact buildPartial() {
        Contact result = new Contact(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          callers_ = java.util.Collections.unmodifiableList(callers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.callers_ = callers_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          excepts_ = java.util.Collections.unmodifiableList(excepts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.excepts_ = excepts_;
        return result;
      }

      public Builder mergeFrom(Contact other) {
        if (other == Contact.getDefaultInstance()) return this;
        if (!other.callers_.isEmpty()) {
          if (callers_.isEmpty()) {
            callers_ = other.callers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCallersIsMutable();
            callers_.addAll(other.callers_);
          }
          
        }
        if (!other.excepts_.isEmpty()) {
          if (excepts_.isEmpty()) {
            excepts_ = other.excepts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExceptsIsMutable();
            excepts_.addAll(other.excepts_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCallersCount(); i++) {
          if (!getCallers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExceptsCount(); i++) {
          if (!getExcepts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Contact parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Contact) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Caller callers = 1;
      private java.util.List<Caller> callers_ =
        java.util.Collections.emptyList();
      private void ensureCallersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          callers_ = new java.util.ArrayList<Caller>(callers_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public java.util.List<Caller> getCallersList() {
        return java.util.Collections.unmodifiableList(callers_);
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public int getCallersCount() {
        return callers_.size();
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Caller getCallers(int index) {
        return callers_.get(index);
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder setCallers(
          int index, Caller value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallersIsMutable();
        callers_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder setCallers(
          int index, Caller.Builder builderForValue) {
        ensureCallersIsMutable();
        callers_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder addCallers(Caller value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallersIsMutable();
        callers_.add(value);

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder addCallers(
          int index, Caller value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallersIsMutable();
        callers_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder addCallers(
          Caller.Builder builderForValue) {
        ensureCallersIsMutable();
        callers_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder addCallers(
          int index, Caller.Builder builderForValue) {
        ensureCallersIsMutable();
        callers_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder addAllCallers(
          Iterable<? extends Caller> values) {
        ensureCallersIsMutable();
        super.addAll(values, callers_);

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder clearCallers() {
        callers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .Caller callers = 1;</code>
       */
      public Builder removeCallers(int index) {
        ensureCallersIsMutable();
        callers_.remove(index);

        return this;
      }

      // repeated .Except excepts = 2;
      private java.util.List<Except> excepts_ =
        java.util.Collections.emptyList();
      private void ensureExceptsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          excepts_ = new java.util.ArrayList<Except>(excepts_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public java.util.List<Except> getExceptsList() {
        return java.util.Collections.unmodifiableList(excepts_);
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public int getExceptsCount() {
        return excepts_.size();
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Except getExcepts(int index) {
        return excepts_.get(index);
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder setExcepts(
          int index, Except value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExceptsIsMutable();
        excepts_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder setExcepts(
          int index, Except.Builder builderForValue) {
        ensureExceptsIsMutable();
        excepts_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder addExcepts(Except value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExceptsIsMutable();
        excepts_.add(value);

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder addExcepts(
          int index, Except value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExceptsIsMutable();
        excepts_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder addExcepts(
          Except.Builder builderForValue) {
        ensureExceptsIsMutable();
        excepts_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder addExcepts(
          int index, Except.Builder builderForValue) {
        ensureExceptsIsMutable();
        excepts_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder addAllExcepts(
          Iterable<? extends Except> values) {
        ensureExceptsIsMutable();
        super.addAll(values, excepts_);

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder clearExcepts() {
        excepts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .Except excepts = 2;</code>
       */
      public Builder removeExcepts(int index) {
        ensureExceptsIsMutable();
        excepts_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:Contact)
    }

    static {
      defaultInstance = new Contact(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Contact)
  }

  public interface ExceptOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string except = 1;
    /**
     * <code>required string except = 1;</code>
     */
    boolean hasExcept();
    /**
     * <code>required string except = 1;</code>
     */
    String getExcept();
    /**
     * <code>required string except = 1;</code>
     */
    com.google.protobuf.ByteString
        getExceptBytes();
  }
  /**
   * Protobuf type {@code Except}
   */
  public static final class Except extends
      com.google.protobuf.GeneratedMessageLite
      implements ExceptOrBuilder {
    // Use Except.newBuilder() to construct.
    private Except(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Except(boolean noInit) {}

    private static final Except defaultInstance;
    public static Except getDefaultInstance() {
      return defaultInstance;
    }

    public Except getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Except(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              except_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Except> PARSER =
        new com.google.protobuf.AbstractParser<Except>() {
      public Except parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Except(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Except> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string except = 1;
    public static final int EXCEPT_FIELD_NUMBER = 1;
    private Object except_;
    /**
     * <code>required string except = 1;</code>
     */
    public boolean hasExcept() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string except = 1;</code>
     */
    public String getExcept() {
      Object ref = except_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          except_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string except = 1;</code>
     */
    public com.google.protobuf.ByteString
        getExceptBytes() {
      Object ref = except_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        except_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      except_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExcept()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExceptBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExceptBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Except parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Except parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Except parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Except parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Except parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Except parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Except parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Except parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Except parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Except parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Except prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Except}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Except, Builder>
        implements ExceptOrBuilder {
      // Construct using com.protobf.InputUser.Except.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        except_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public Except getDefaultInstanceForType() {
        return Except.getDefaultInstance();
      }

      public Except build() {
        Except result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Except buildPartial() {
        Except result = new Except(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.except_ = except_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(Except other) {
        if (other == Except.getDefaultInstance()) return this;
        if (other.hasExcept()) {
          bitField0_ |= 0x00000001;
          except_ = other.except_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExcept()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Except parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Except) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string except = 1;
      private Object except_ = "";
      /**
       * <code>required string except = 1;</code>
       */
      public boolean hasExcept() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string except = 1;</code>
       */
      public String getExcept() {
        Object ref = except_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          except_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string except = 1;</code>
       */
      public com.google.protobuf.ByteString
          getExceptBytes() {
        Object ref = except_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          except_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string except = 1;</code>
       */
      public Builder setExcept(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        except_ = value;
        
        return this;
      }
      /**
       * <code>required string except = 1;</code>
       */
      public Builder clearExcept() {
        bitField0_ = (bitField0_ & ~0x00000001);
        except_ = getDefaultInstance().getExcept();
        
        return this;
      }
      /**
       * <code>required string except = 1;</code>
       */
      public Builder setExceptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        except_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Except)
    }

    static {
      defaultInstance = new Except(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Except)
  }

  public interface CallerOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 caller = 1;
    /**
     * <code>required int64 caller = 1;</code>
     *
     * <pre>
     *最新号码
     * </pre>
     */
    boolean hasCaller();
    /**
     * <code>required int64 caller = 1;</code>
     *
     * <pre>
     *最新号码
     * </pre>
     */
    long getCaller();

    // repeated int64 allCaller = 2;
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    java.util.List<Long> getAllCallerList();
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    int getAllCallerCount();
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    long getAllCaller(int index);
  }
  /**
   * Protobuf type {@code Caller}
   */
  public static final class Caller extends
      com.google.protobuf.GeneratedMessageLite
      implements CallerOrBuilder {
    // Use Caller.newBuilder() to construct.
    private Caller(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Caller(boolean noInit) {}

    private static final Caller defaultInstance;
    public static Caller getDefaultInstance() {
      return defaultInstance;
    }

    public Caller getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Caller(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              caller_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allCaller_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              allCaller_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                allCaller_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                allCaller_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          allCaller_ = java.util.Collections.unmodifiableList(allCaller_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Caller> PARSER =
        new com.google.protobuf.AbstractParser<Caller>() {
      public Caller parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Caller(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Caller> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 caller = 1;
    public static final int CALLER_FIELD_NUMBER = 1;
    private long caller_;
    /**
     * <code>required int64 caller = 1;</code>
     *
     * <pre>
     *最新号码
     * </pre>
     */
    public boolean hasCaller() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 caller = 1;</code>
     *
     * <pre>
     *最新号码
     * </pre>
     */
    public long getCaller() {
      return caller_;
    }

    // repeated int64 allCaller = 2;
    public static final int ALLCALLER_FIELD_NUMBER = 2;
    private java.util.List<Long> allCaller_;
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    public java.util.List<Long>
        getAllCallerList() {
      return allCaller_;
    }
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    public int getAllCallerCount() {
      return allCaller_.size();
    }
    /**
     * <code>repeated int64 allCaller = 2;</code>
     *
     * <pre>
     *所有号码, 包括历史号码
     * </pre>
     */
    public long getAllCaller(int index) {
      return allCaller_.get(index);
    }

    private void initFields() {
      caller_ = 0L;
      allCaller_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCaller()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, caller_);
      }
      for (int i = 0; i < allCaller_.size(); i++) {
        output.writeInt64(2, allCaller_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, caller_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allCaller_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(allCaller_.get(i));
        }
        size += dataSize;
        size += 1 * getAllCallerList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Caller parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Caller parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Caller parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Caller parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Caller parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Caller parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Caller parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Caller parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Caller parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Caller parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Caller prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Caller}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Caller, Builder>
        implements CallerOrBuilder {
      // Construct using com.protobf.InputUser.Caller.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        caller_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        allCaller_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public Caller getDefaultInstanceForType() {
        return Caller.getDefaultInstance();
      }

      public Caller build() {
        Caller result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Caller buildPartial() {
        Caller result = new Caller(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.caller_ = caller_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          allCaller_ = java.util.Collections.unmodifiableList(allCaller_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.allCaller_ = allCaller_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(Caller other) {
        if (other == Caller.getDefaultInstance()) return this;
        if (other.hasCaller()) {
          setCaller(other.getCaller());
        }
        if (!other.allCaller_.isEmpty()) {
          if (allCaller_.isEmpty()) {
            allCaller_ = other.allCaller_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAllCallerIsMutable();
            allCaller_.addAll(other.allCaller_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCaller()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Caller parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Caller) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 caller = 1;
      private long caller_ ;
      /**
       * <code>required int64 caller = 1;</code>
       *
       * <pre>
       *最新号码
       * </pre>
       */
      public boolean hasCaller() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 caller = 1;</code>
       *
       * <pre>
       *最新号码
       * </pre>
       */
      public long getCaller() {
        return caller_;
      }
      /**
       * <code>required int64 caller = 1;</code>
       *
       * <pre>
       *最新号码
       * </pre>
       */
      public Builder setCaller(long value) {
        bitField0_ |= 0x00000001;
        caller_ = value;
        
        return this;
      }
      /**
       * <code>required int64 caller = 1;</code>
       *
       * <pre>
       *最新号码
       * </pre>
       */
      public Builder clearCaller() {
        bitField0_ = (bitField0_ & ~0x00000001);
        caller_ = 0L;
        
        return this;
      }

      // repeated int64 allCaller = 2;
      private java.util.List<Long> allCaller_ = java.util.Collections.emptyList();
      private void ensureAllCallerIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allCaller_ = new java.util.ArrayList<Long>(allCaller_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public java.util.List<Long>
          getAllCallerList() {
        return java.util.Collections.unmodifiableList(allCaller_);
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public int getAllCallerCount() {
        return allCaller_.size();
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public long getAllCaller(int index) {
        return allCaller_.get(index);
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public Builder setAllCaller(
          int index, long value) {
        ensureAllCallerIsMutable();
        allCaller_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public Builder addAllCaller(long value) {
        ensureAllCallerIsMutable();
        allCaller_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public Builder addAllAllCaller(
          Iterable<? extends Long> values) {
        ensureAllCallerIsMutable();
        super.addAll(values, allCaller_);
        
        return this;
      }
      /**
       * <code>repeated int64 allCaller = 2;</code>
       *
       * <pre>
       *所有号码, 包括历史号码
       * </pre>
       */
      public Builder clearAllCaller() {
        allCaller_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Caller)
    }

    static {
      defaultInstance = new Caller(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Caller)
  }

  public interface AppListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .App apps = 1;
    /**
     * <code>repeated .App apps = 1;</code>
     */
    java.util.List<App>
        getAppsList();
    /**
     * <code>repeated .App apps = 1;</code>
     */
    App getApps(int index);
    /**
     * <code>repeated .App apps = 1;</code>
     */
    int getAppsCount();
  }
  /**
   * Protobuf type {@code AppList}
   *
   * <pre>
   *安装、使用信息
   * </pre>
   */
  public static final class AppList extends
      com.google.protobuf.GeneratedMessageLite
      implements AppListOrBuilder {
    // Use AppList.newBuilder() to construct.
    private AppList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AppList(boolean noInit) {}

    private static final AppList defaultInstance;
    public static AppList getDefaultInstance() {
      return defaultInstance;
    }

    public AppList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AppList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                apps_ = new java.util.ArrayList<App>();
                mutable_bitField0_ |= 0x00000001;
              }
              apps_.add(input.readMessage(App.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          apps_ = java.util.Collections.unmodifiableList(apps_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AppList> PARSER =
        new com.google.protobuf.AbstractParser<AppList>() {
      public AppList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AppList(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<AppList> getParserForType() {
      return PARSER;
    }

    // repeated .App apps = 1;
    public static final int APPS_FIELD_NUMBER = 1;
    private java.util.List<App> apps_;
    /**
     * <code>repeated .App apps = 1;</code>
     */
    public java.util.List<App> getAppsList() {
      return apps_;
    }
    /**
     * <code>repeated .App apps = 1;</code>
     */
    public java.util.List<? extends AppOrBuilder>
        getAppsOrBuilderList() {
      return apps_;
    }
    /**
     * <code>repeated .App apps = 1;</code>
     */
    public int getAppsCount() {
      return apps_.size();
    }
    /**
     * <code>repeated .App apps = 1;</code>
     */
    public App getApps(int index) {
      return apps_.get(index);
    }
    /**
     * <code>repeated .App apps = 1;</code>
     */
    public AppOrBuilder getAppsOrBuilder(
        int index) {
      return apps_.get(index);
    }

    private void initFields() {
      apps_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAppsCount(); i++) {
        if (!getApps(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < apps_.size(); i++) {
        output.writeMessage(1, apps_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < apps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, apps_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static AppList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AppList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AppList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AppList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AppList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AppList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static AppList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static AppList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static AppList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AppList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AppList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code AppList}
     *
     * <pre>
     *安装、使用信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          AppList, Builder>
        implements AppListOrBuilder {
      // Construct using com.protobf.InputUser.AppList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        apps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public AppList getDefaultInstanceForType() {
        return AppList.getDefaultInstance();
      }

      public AppList build() {
        AppList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AppList buildPartial() {
        AppList result = new AppList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          apps_ = java.util.Collections.unmodifiableList(apps_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.apps_ = apps_;
        return result;
      }

      public Builder mergeFrom(AppList other) {
        if (other == AppList.getDefaultInstance()) return this;
        if (!other.apps_.isEmpty()) {
          if (apps_.isEmpty()) {
            apps_ = other.apps_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAppsIsMutable();
            apps_.addAll(other.apps_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAppsCount(); i++) {
          if (!getApps(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AppList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AppList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .App apps = 1;
      private java.util.List<App> apps_ =
        java.util.Collections.emptyList();
      private void ensureAppsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          apps_ = new java.util.ArrayList<App>(apps_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .App apps = 1;</code>
       */
      public java.util.List<App> getAppsList() {
        return java.util.Collections.unmodifiableList(apps_);
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public int getAppsCount() {
        return apps_.size();
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public App getApps(int index) {
        return apps_.get(index);
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder setApps(
          int index, App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppsIsMutable();
        apps_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder setApps(
          int index, App.Builder builderForValue) {
        ensureAppsIsMutable();
        apps_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder addApps(App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppsIsMutable();
        apps_.add(value);

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder addApps(
          int index, App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppsIsMutable();
        apps_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder addApps(
          App.Builder builderForValue) {
        ensureAppsIsMutable();
        apps_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder addApps(
          int index, App.Builder builderForValue) {
        ensureAppsIsMutable();
        apps_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder addAllApps(
          Iterable<? extends App> values) {
        ensureAppsIsMutable();
        super.addAll(values, apps_);

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder clearApps() {
        apps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .App apps = 1;</code>
       */
      public Builder removeApps(int index) {
        ensureAppsIsMutable();
        apps_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:AppList)
    }

    static {
      defaultInstance = new AppList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AppList)
  }

  public interface AppOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string pkg = 1;
    /**
     * <code>required string pkg = 1;</code>
     */
    boolean hasPkg();
    /**
     * <code>required string pkg = 1;</code>
     */
    String getPkg();
    /**
     * <code>required string pkg = 1;</code>
     */
    com.google.protobuf.ByteString
        getPkgBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 activeDays = 3;
    /**
     * <code>optional int32 activeDays = 3;</code>
     */
    boolean hasActiveDays();
    /**
     * <code>optional int32 activeDays = 3;</code>
     */
    int getActiveDays();

    // optional int32 collectDays = 4;
    /**
     * <code>optional int32 collectDays = 4;</code>
     */
    boolean hasCollectDays();
    /**
     * <code>optional int32 collectDays = 4;</code>
     */
    int getCollectDays();
  }
  /**
   * Protobuf type {@code App}
   */
  public static final class App extends
      com.google.protobuf.GeneratedMessageLite
      implements AppOrBuilder {
    // Use App.newBuilder() to construct.
    private App(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private App(boolean noInit) {}

    private static final App defaultInstance;
    public static App getDefaultInstance() {
      return defaultInstance;
    }

    public App getDefaultInstanceForType() {
      return defaultInstance;
    }

    private App(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pkg_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              activeDays_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              collectDays_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<App> PARSER =
        new com.google.protobuf.AbstractParser<App>() {
      public App parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new App(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<App> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string pkg = 1;
    public static final int PKG_FIELD_NUMBER = 1;
    private Object pkg_;
    /**
     * <code>required string pkg = 1;</code>
     */
    public boolean hasPkg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string pkg = 1;</code>
     */
    public String getPkg() {
      Object ref = pkg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pkg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string pkg = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPkgBytes() {
      Object ref = pkg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        pkg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 activeDays = 3;
    public static final int ACTIVEDAYS_FIELD_NUMBER = 3;
    private int activeDays_;
    /**
     * <code>optional int32 activeDays = 3;</code>
     */
    public boolean hasActiveDays() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 activeDays = 3;</code>
     */
    public int getActiveDays() {
      return activeDays_;
    }

    // optional int32 collectDays = 4;
    public static final int COLLECTDAYS_FIELD_NUMBER = 4;
    private int collectDays_;
    /**
     * <code>optional int32 collectDays = 4;</code>
     */
    public boolean hasCollectDays() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 collectDays = 4;</code>
     */
    public int getCollectDays() {
      return collectDays_;
    }

    private void initFields() {
      pkg_ = "";
      name_ = "";
      activeDays_ = 0;
      collectDays_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPkg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPkgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, activeDays_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, collectDays_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPkgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, activeDays_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, collectDays_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static App parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static App parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static App parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static App parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static App parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static App parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static App parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static App parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static App parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static App parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(App prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code App}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          App, Builder>
        implements AppOrBuilder {
      // Construct using com.protobf.InputUser.App.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pkg_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        activeDays_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        collectDays_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public App getDefaultInstanceForType() {
        return App.getDefaultInstance();
      }

      public App build() {
        App result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public App buildPartial() {
        App result = new App(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pkg_ = pkg_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.activeDays_ = activeDays_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.collectDays_ = collectDays_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(App other) {
        if (other == App.getDefaultInstance()) return this;
        if (other.hasPkg()) {
          bitField0_ |= 0x00000001;
          pkg_ = other.pkg_;
          
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          
        }
        if (other.hasActiveDays()) {
          setActiveDays(other.getActiveDays());
        }
        if (other.hasCollectDays()) {
          setCollectDays(other.getCollectDays());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPkg()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        App parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (App) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string pkg = 1;
      private Object pkg_ = "";
      /**
       * <code>required string pkg = 1;</code>
       */
      public boolean hasPkg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string pkg = 1;</code>
       */
      public String getPkg() {
        Object ref = pkg_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pkg_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string pkg = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPkgBytes() {
        Object ref = pkg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          pkg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string pkg = 1;</code>
       */
      public Builder setPkg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pkg_ = value;
        
        return this;
      }
      /**
       * <code>required string pkg = 1;</code>
       */
      public Builder clearPkg() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pkg_ = getDefaultInstance().getPkg();
        
        return this;
      }
      /**
       * <code>required string pkg = 1;</code>
       */
      public Builder setPkgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pkg_ = value;
        
        return this;
      }

      // optional string name = 2;
      private Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }

      // optional int32 activeDays = 3;
      private int activeDays_ ;
      /**
       * <code>optional int32 activeDays = 3;</code>
       */
      public boolean hasActiveDays() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 activeDays = 3;</code>
       */
      public int getActiveDays() {
        return activeDays_;
      }
      /**
       * <code>optional int32 activeDays = 3;</code>
       */
      public Builder setActiveDays(int value) {
        bitField0_ |= 0x00000004;
        activeDays_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 activeDays = 3;</code>
       */
      public Builder clearActiveDays() {
        bitField0_ = (bitField0_ & ~0x00000004);
        activeDays_ = 0;
        
        return this;
      }

      // optional int32 collectDays = 4;
      private int collectDays_ ;
      /**
       * <code>optional int32 collectDays = 4;</code>
       */
      public boolean hasCollectDays() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 collectDays = 4;</code>
       */
      public int getCollectDays() {
        return collectDays_;
      }
      /**
       * <code>optional int32 collectDays = 4;</code>
       */
      public Builder setCollectDays(int value) {
        bitField0_ |= 0x00000008;
        collectDays_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 collectDays = 4;</code>
       */
      public Builder clearCollectDays() {
        bitField0_ = (bitField0_ & ~0x00000008);
        collectDays_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:App)
    }

    static {
      defaultInstance = new App(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:App)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
